{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Drupal Webserver Template",
    "Metadata":{
        "AWS::CloudFormation::Interface":{
            "ParameterGroups": [
                {
                    "Label": {"default": "Network Configuration"},
                    "Parameters": [
                        "WebElasticLoadBalancerSubnets",
                        "WebServerSubnets",
                        "WebELBSecurityGroup",
                        "WebServerSecurityGroup",
                        "EFSSecurityGroup"
                    ]
                },
                {
                    "Label": {"default": "Database Configuration"},
                    "Parameters": [
                        "DBEndpointAddress",
                        "DBMasterUsername",
                        "DBMasterUserPassword",
                        "DrupalDbName",
                        "DrupalDbUsername",
                        "DrupalDbPassword"
                    ]
                },
                {
                    "Label": {"default": "Drupal Configuration"},
                    "Parameters": [
                        "PhpVersion",
                        "DrupalVersion",
                        "DrupalSiteName",
                        "DrupalSiteAdminEmail",
                        "DrupalSiteAdminUsername",
                        "DrupalSiteAdminPassword",
                        "DrupalSiteDomain"
                    ]
                },
                {
                    "Label": {"default": "Drupal Webserver Configuration"},
                    "Parameters": [
                        "WebServerInstanceType",
                        "AutoScalingNotificationEmail",
                        "WebServerMinSize",
                        "WebServerMaxSize",
                        "WebServerDesiredCapacity",
                        "KeyPair"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {

            }
        }
    },
    "Parameters":{
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "AWS Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the AWS Quick Start assets. AWS Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "AWS Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "drupal/latest/",
            "Description": "S3 key prefix for the AWS Quick Start assets.AWS Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        },
        "AutoScalingNotificationEmail": {
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "Must be a valid email address.",
            "Description": "Email address to notify Auto Scaling operations",
            "Type": "String"
        },
        "WebServerSubnets": {
            "ConstraintDescription": "must be list of existing subnet Ids",
            "Default": "",
            "Description": "A list of subnet identifiers of Amazon VPCs where the WebServer Autoscaling would be launched.",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "EFSSecurityGroup": {
            "Description": "EFS Security Group",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "WebServerInstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ],
            "ConstraintDescription": "Choose an instance type.",
            "Default": "t2.micro",
            "Description": "Web Server node instance type",
            "Type": "String"
        },
        "WebServerSecurityGroup": {
            "Description": "Web Server Security Group",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "KeyPair": {
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair.",
            "Default": "id_rsa_aws",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "DBEndpointAddress":{
            "Description": "Aurora DB Endpoint",
            "Type": "String"
        },
        "DBMasterUsername": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
            "Default": "dbadmin",
            "Description": "The database admin account username",
            "MaxLength": "16",
            "MinLength": "1",
            "Type": "String"
        },
        "DBMasterUserPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "ConstraintDescription": "Min 8 chars.",
            "Description": "The database admin account password",
            "MaxLength": "64",
            "MinLength": "8",
            "NoEcho": "True",
            "Type": "String"
        },  
        "DrupalDbName": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "Default": "drupaldb",
            "Description": "Name of the Database to be created and used for Drupal",
            "MaxLength": "64",
            "MinLength": "5",
            "Type": "String"
        },
        "DrupalDbUsername": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
            "Default": "drupal",
            "Description": "The drupal database user account",
            "MaxLength": "16",
            "MinLength": "1",
            "Type": "String"
        },
        "DrupalDbPassword": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "Min 8 chars. Only alphanumeric",
            "Description": "The drupal database user account password",
            "MaxLength": "64",
            "MinLength": "8",
            "Type": "String",
            "NoEcho": "true"
        },
        "PhpVersion":{
            "AllowedValues": ["php56", "php70", "php71"],
            "ConstraintDescription": "Choose a valid PHP version. Values can be php56, php70, php71 ",
            "Default": "php56",
            "Description": "PHP version to be installed. PHP-5.6=php56, PHP-7.0=php70, PHP-7.1=php71",
            "Type": "String"
        },
        "DrupalVersion":{
            "Description": "Drupal version to install",
            "Type": "String",
            "AllowedValues": ["7", "8"],
            "ConstraintDescription": "Allowed values 7 or 8",
            "Default": "7"
        },
        "DrupalSiteName":{
            "Description": "Descriptive name for your drupal site",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9 ]*",
            "ConstraintDescription": "Min 5 chars. Only alphanumeric",
            "Default": "My Site",
            "MaxLength": "64",
            "MinLength": "5",
            "Type": "String"
        },
        "DrupalSiteAdminEmail": {
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "Must be a valid email address.",
            "Description": "Drupal Site Administrator Email",
            "Type": "String"
        },
        "DrupalSiteAdminUsername": {
            "Description" : "The Drupal site admin account username",
            "Type": "String",
            "MinLength": "5",
            "MaxLength": "16",
            "Default": "admin",
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription" : "Must begin with a letter, contain only alphanumeric characters and must be between 5 and 16 characters long"
        },
        "DrupalSiteAdminPassword": {
            "Description" : "The Drupal site admin account password",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "41",
            "AllowedPattern" : "[a-zA-Z0-9]*",
            "ConstraintDescription" : "Must contain only alphanumeric characters and must be between 8 and 41 characters long.",
            "NoEcho": "true"
        },
        "DrupalSiteDomain":{
            "Description": "Domain name of the site. e.g. mywebsite.com. You must have the domain name registered",
            "Default": "localhost",
            "Type": "String"
        },
        "WebServerMinSize": {
            "Default": "1",
            "Description": "Minimum number of web server instances in Auto Scaling group",
            "Type": "Number"
        },
        "WebServerMaxSize": {
            "Default": "1",
            "Description": "Maximum number of web server instances in Auto Scaling group",
            "Type": "Number"
        },
        "WebServerDesiredCapacity": {
            "Default": "1",
            "Description": "Desired number of web server instances in Auto Scaling group",
            "Type": "Number"
        },
        "WebElasticLoadBalancerSubnets": {
            "ConstraintDescription": "Must be list of existing Public subnet Ids",
            "Default": "",
            "Description": "A list of public subnet identifiers of Amazon VPCs where the ElasticLoadBalancer would be launched.",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "WebELBSecurityGroup": {
            "Description": "ELB Security Group",
            "Type": "AWS::EC2::SecurityGroup::Id"
        }
    },
    "Mappings":{
        "AWSAMIRegionMap": {
            "AMI": {
                "AMZNLINUXHVM": "amzn-ami-hvm-2017.03.1.20170812-x86_64-gp2"
            },
            "ap-northeast-1": {
                "AMZNLINUXHVM": "ami-4af5022c"
            },
            "ap-northeast-2": {
                "AMZNLINUXHVM": "ami-8663bae8"
            },
            "ap-south-1": {
                "AMZNLINUXHVM": "ami-d7abd1b8"
            },
            "ap-southeast-1": {
                "AMZNLINUXHVM": "ami-fdb8229e"
            },
            "ap-southeast-2": {
                "AMZNLINUXHVM": "ami-30041c53"
            },
            "ca-central-1": {
                "AMZNLINUXHVM": "ami-5ac17f3e"
            },
            "eu-central-1": {
                "AMZNLINUXHVM": "ami-657bd20a"
            },
            "eu-west-1": {
                "AMZNLINUXHVM": "ami-ebd02392"
            },
            "eu-west-2": {
                "AMZNLINUXHVM": "ami-489f8e2c"
            },
            "sa-east-1": {
                "AMZNLINUXHVM": "ami-d27203be"
            },
            "us-east-1": {
                "AMZNLINUXHVM": "ami-4fffc834"
            },
            "us-east-2": {
                "AMZNLINUXHVM": "ami-ea87a78f"
            },
            "us-west-1": {
                "AMZNLINUXHVM": "ami-3a674d5a"
            },
            "us-west-2": {
                "AMZNLINUXHVM": "ami-aa5ebdd2"
            }
        }
    },
    "Conditions": {
        "DomainIsLocalhost":{"Fn::Equals":[{"Ref": "DrupalSiteDomain"}, "localhost"]},
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        }
    },
    "Resources":{
        "DrupalEFS":{
            "Type": "AWS::EFS::FileSystem",
            "Properties":{
                "PerformanceMode": "generalPurpose",
                "FileSystemTags": [
                    {"Key": "Name", "Value": "Drupal EFS Shared Filesystem"}
                ]
            }
        },
        "DrupalEFSMountTarget1": {
            "Type": "AWS::EFS::MountTarget",
            "Properties": {
                "FileSystemId": {"Ref": "DrupalEFS"},
                "SubnetId": {"Fn::Select": ["0", {"Ref": "WebServerSubnets"}]},
                "SecurityGroups": [{"Ref": "EFSSecurityGroup"}]
            }
        },
        "DrupalEFSMountTarget2": {
            "Type": "AWS::EFS::MountTarget",
            "Properties": {
                "FileSystemId": {"Ref": "DrupalEFS"},
                "SubnetId": {"Fn::Select": ["1", {"Ref": "WebServerSubnets"}]},
                "SecurityGroups": [{"Ref": "EFSSecurityGroup"}]
            }
        },
        "DrupalAMIEC2Instance":{ 
            "Type": "AWS::EC2::Instance",
            "DependsOn":["DrupalEFSMountTarget1", "DrupalEFSMountTarget2"],
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets":{
                        "install_drupal": [
                            "install_cfn", 
                            "mount_efs", 
                            "createdb", 
                            {"Fn::Join":["",["install-packageSet-",{"Ref": "PhpVersion"}]]},
                            "drupal"
                        ]
                    },
                    "install_cfn":{
                        "files":{
                            "/etc/cfn/cfn-hup.conf":{
                                "content": {"Fn::Join": ["",[
                                    "[main]\n",
                                    "stack=", {"Ref": "AWS::StackId"}, "\n",
                                    "region=", {"Ref": "AWS::Region"}, "\n",
                                    "verbose=true"
                                ]]},
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":{
                                "content":{ "Fn::Join":["",[
                                    "[cfn-auto-reloader-hook]\n",
                                    "triggers=post.update\n",
                                    "path=Resources.DrupalAMIEC2Instance.Metadata.AWS::CloudFormation::Init\n",
                                    "action=/opt/aws/bin/cfn-init -v ",
                                    "--stack ", {"Ref": "AWS::StackName"}, " ",
                                    "--resource DrupalAMIEC2Instance ",
                                    "--configsets install_drupal ",
                                    "--region ", {"Ref": "AWS::Region"}, "\n"
                                ]]},
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "services":{
                            "sysvinit":{
                                "cfn-hup":{
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "mount_efs":{
                        "packages":{
                            "yum":{
                                "nfs-utils":[]
                            }
                        },
                        "files":{
                            "/tmp/mount-efs.sh":{
                                "content":{"Fn::Join":["",[
                                    "#!/bin/bash\n",
                                    "LINE=\"", 
                                    {"Fn::Join":["",[{"Ref": "DrupalEFS"}, ".efs.", {"Ref":"AWS::Region"}, ".amazonaws.com", ":/ "]]}, 
                                    "/var/www nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0\"\n",
                                    "grep -q \"$LINE\" /etc/fstab || echo \"$LINE\" >> /etc/fstab\n"
                                ]]},
                                "mode": "000500",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands":{
                            "01_append_fstab":{
                                "command": "/tmp/mount-efs.sh"
                            },
                            "02_create_drupal_dir":{
                                "command": "mkdir -p /var/www",
                                "test": "test ! -e /var/www"
                            },
                            "03_mount_efs":{
                                "command": "mount -a"
                            }
                        }
                    },
                    "createdb":{
                        "packages":{
                            "yum":{
                                "mysql56":[]
                            }
                        },
                        "files":{
                            "/tmp/setup_drupaldb.sql":{
                                "content":{"Fn::Join":["",[
                                    "CREATE DATABASE IF NOT EXISTS ", {"Ref": "DrupalDbName"}, " CHARACTER SET UTF8 COLLATE utf8_general_ci;\n",
                                    "GRANT ALL ON ", {"Ref": "DrupalDbName"}, ".* TO '", {"Ref": "DrupalDbUsername"}, "'@'%' IDENTIFIED BY '", {"Ref": "DrupalDbPassword"},"';\n"
                                ]]},
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands":{
                            "01_runQuery":{
                                "command": {"Fn::Join": ["",[
                                    "mysql -u ", {"Ref": "DBMasterUsername"}, 
                                    " --password='", { "Ref" : "DBMasterUserPassword" }, "'",
                                    " -h ", {"Ref": "DBEndpointAddress"},
                                    " < /tmp/setup_drupaldb.sql || error_exit 'Failed to create database user'\n"
                                ]]}
                            },
                            "02_cleanup": {
                                "command": "sudo rm -f /tmp/setup_drupaldb.sql"
                            }
                        }
                    },
                    "install-packageSet-php56":{
                        "packages":{
                            "yum":{
                                "git": [],
                                "httpd24": [],
                                "php56": [],
                                "php56-cli": [],
                                "php56-common": [],
                                "php56-pdo": [],
                                "php56-mysqlnd": [],
                                "php56-xml": [],
                                "php56-gd": [],
                                "libssh2": [],
                                "php56-pecl-ssh2": [],
                                "php56-mbstring": [],
                                "php56-fpm": [],
                                "php56-opcache": []
                            }
                        }
                    },
                    "install-packageSet-php70":{
                        "packages":{
                            "yum":{
                                "git": [],
                                "httpd24": [],
                                "php70": [],
                                "php70-cli": [],
                                "php70-zip": [],
                                "php70-common": [],
                                "php70-pdo": [],
                                "php70-mysqlnd": [],
                                "php70-xml": [],
                                "php70-gd": [],
                                "libssh2": [],
                                "php70-pecl-ssh2": [],
                                "php70-mbstring": [],
                                "php70-fpm": [],
                                "php70-opcache": []
                            }
                        }
                    },
                    "install-packageSet-php71":{
                        "packages":{
                            "yum":{
                                "git": [],
                                "httpd24": [],
                                "php71": [],
                                "php71-cli": [],
                                "php71-common": [],
                                "php71-pdo": [],
                                "php71-mysqlnd": [],
                                "php71-xml": [],
                                "php71-gd": [],
                                "libssh2": [],
                                "php71-pecl-ssh2": [],
                                "php71-mbstring": [],
                                "php71-fpm": [],
                                "php71-opcache": []
                            }
                        }
                    },
                    "drupal":{
                        "files":{
                            "/etc/httpd/conf.d/drupal.conf":{
                                "content":{"Fn::Join":["",[
                                    "<VirtualHost *:80>\n",
                                    "    ServerAdmin ",{"Ref": "DrupalSiteAdminEmail"},"\n",
                                    "    ServerName  ", {"Ref": "DrupalSiteDomain"}, "\n",
                                    "    ServerAlias ", {"Fn::If":["DomainIsLocalhost", "localhost", {"Fn::Join":["",["www.",{"Ref":"DrupalSiteDomain"}]]}]}, "\n",    
                                    "    DocumentRoot /var/www/drupal\n",
                                    "    <Directory /var/www/drupal>\n",
                                    "        Options -Indexes -MultiViews +FollowSymLinks\n",
                                    "        AllowOverride All\n",
                                    "        Order allow,deny\n",
                                    "        allow from all\n",
                                    "    </Directory>\n",
                                    "    LogLevel warn\n",
                                    "    ErrorLog /var/log/httpd/drupal-error.log\n",
                                    "    CustomLog /var/log/httpd/drupal-access.log combined\n",
                                    "</VirtualHost>\n",
                                    "ServerSignature Off\n",
                                    "ServerTokens Prod\n"
                                ]]},
                                "mode":"000644",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands":{
                            "01_install_composer":{
                                "command": "curl -sS https://getcomposer.org/installer | php",
                                "cwd": "/root",
                                "env": {"HOME": "/root"}
                            },
                            "02_install_drush":{
                                "command": "/root/composer.phar global require drush/drush:8.*",
                                "test": "test -e /root/composer.phar",
                                "env": {"HOME": "/root"}
                            },
                            "03_clean_httpd_confd_dir":{
                                "command": "rm -f autoindex.conf notrace.conf userdir.conf welcome.conf",
                                "cwd": "/etc/httpd/conf.d/"
                            },
                            "04_00_download_drupal":{
                                "command": {"Fn::Join":["",[
                                    "/root/.composer/vendor/bin/drush dl -y drupal-", 
                                    {"Ref": "DrupalVersion"}," --drupal-project-rename drupal"
                                ]]},
                                "cwd": "/root",
                                "env": {
                                    "HOME": "/root",
                                    "DRUSH_PHP": "/usr/bin/php"
                                }
                            },
                            "04_01_move_drupal":{
                                "cwd": "/root",
                                "command": "mv /root/drupal /var/www/drupal"
                            },
                            "05_disable_php_allow_url_fopen":{
                                "command": "sed -i 's/allow_url_fopen = On/allow_url_fopen = Off/g' /etc/php.ini",
                                "test": "test -e /etc/php.ini"
                            },
                            "06_disable_expose_php":{
                                "command": "sed -i 's/expose_php = On/expose_php = Off/g' /etc/php.ini",
                                "test": "test -e /etc/php.ini"
                            },
                            "07_install_drupal":{
                                "command": {"Fn::Join":["",[
                                    "/root/.composer/vendor/bin/drush site-install standard --yes",
                                    " --site-name='", { "Ref" : "DrupalSiteName" }, "' --site-mail=", { "Ref" : "DrupalSiteAdminEmail" },
                                    " --account-name=", { "Ref" : "DrupalSiteAdminUsername" }, " --account-pass=", { "Ref" : "DrupalSiteAdminPassword" },
                                    " --db-url=mysql://", { "Ref" : "DrupalDbUsername" }, ":", { "Ref" : "DrupalDbPassword" }, "@", { "Ref" : "DBEndpointAddress" }, "/", { "Ref" : "DrupalDbName" },
                                    " --db-prefix=drupal_\n"
                                ]]},
                                "cwd": "/var/www/drupal",
                                "env": {
                                    "HOME": "/root",
                                    "DRUSH_PHP": "/usr/bin/php"
                                }
                            },
                            "08_drupal_files_folder_permission":{
                                "command": "chown -R apache:apache /var/www/drupal/sites/default/files",
                                "test": "test -e /var/www/drupal/sites/default/files"
                            }
                        },
                        "services":{
                            "sysvinit":{
                                "httpd": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/httpd/conf.d/drupal.conf",
                                        "/etc/php.ini",
                                        "/var/www/drupal/sites/default/settings.php"
                                    ]
                                }
                            } 
                        }
                    }
                }
            },
            "Properties": {
                "ImageId" : {"Fn::FindInMap": ["AWSAMIRegionMap", {"Ref": "AWS::Region"}, "AMZNLINUXHVM" ]},
                "InstanceType": {"Ref": "WebServerInstanceType"},
                "SubnetId":{"Fn::Select": ["0", {"Ref": "WebServerSubnets"}]},
                "SecurityGroupIds": [{"Ref": "WebServerSecurityGroup"}],
                "KeyName": {"Ref": "KeyPair"},
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": ["", [
                            "#!/bin/bash\n",
                            "yum update -y aws-cfn-bootstrap\n",

                            "yum update -y", "\n",

                            "/opt/aws/bin/cfn-init -v ",
                            "--stack ", {"Ref": "AWS::StackName"}, " ",
                            "--resource DrupalAMIEC2Instance ",
                            "--configsets install_drupal ",
                            "--region ", {"Ref": "AWS::Region"}, "\n",
                            
                            "/opt/aws/bin/cfn-signal -e $? --stack ", {"Ref": "AWS::StackName"},
                            " --resource DrupalAMIEC2Instance --region ", {"Ref": "AWS::Region"}, "\n"
                        ]]}
                },
                "Tags": [
                    {"Key":"Name", "Value": {"Fn::Join":["", [{"Ref": "AWS::StackName"},"-AMI Instance"]]}}
                ]
            },
            "CreationPolicy": {
				"ResourceSignal" : {
					"Count" : "1",
					"Timeout" : "PT20M"
				}
			}
        },
        "CreateDrupalAMI":{
            "Type": "AWS::CloudFormation::Stack",
            "Properties":{
                "TemplateURL": {"Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/createAMI.template"},
                "Parameters":{
                    "EC2InstanceId": {"Ref": "DrupalAMIEC2Instance"},
                    "AMIBaseName": "Drupal",
                    "ARNPartition": {
                        "Fn::If": [
                            "GovCloudCondition",
                            "aws-us-gov",
                            "aws"
                        ]
                    }
                }
            }
        },
        "WebServerAsg": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": {"Ref": "WebServerLC"},
                "MinSize": {"Ref": "WebServerMinSize"},
                "MaxSize": {"Ref": "WebServerMaxSize"},
                "DesiredCapacity": {"Ref": "WebServerDesiredCapacity"},
                "LoadBalancerNames": [{"Ref": "WebElasticLoadBalancer"}],
                "VPCZoneIdentifier": {"Ref": "WebServerSubnets"},
                "NotificationConfiguration": {
                    "TopicARN": {"Ref": "NotificationTopic"},
                    "NotificationTypes": [
                        "autoscaling:EC2_INSTANCE_LAUNCH",
                        "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
                        "autoscaling:EC2_INSTANCE_TERMINATE",
                        "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {"Fn::Join": ["-",[{"Ref": "AWS::StackName"},"Web Server"]]},
                        "PropagateAtLaunch": "true"
                    }
                ]
            }
        },
        "WebServerLC": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "DependsOn": "CreateDrupalAMI",
            "Properties": {
                "ImageId": {"Fn::GetAtt": ["CreateDrupalAMI", "Outputs.AMIId"]},
                "InstanceType": {"Ref": "WebServerInstanceType"},
                "SecurityGroups": [{"Ref": "WebServerSecurityGroup"}],
                "KeyName": {"Ref": "KeyPair"}
            }
        },
        "NotificationTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "Subscription": [
                    {"Endpoint": {"Ref": "AutoScalingNotificationEmail"}, "Protocol": "email"}
                ],
                "TopicName" : {"Fn::Join": ["", [{"Ref":"AWS::StackName"},"-DrupalSnsTopic"]]}
            }
        },
        "WebServerScaleUpPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {"Ref": "WebServerAsg"},
                "Cooldown": "60",
                "ScalingAdjustment": "1"
            }
        },
        "WebServerScaleDownPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {"Ref": "WebServerAsg"},
                "Cooldown": "60",
                "ScalingAdjustment": "-1"
            }
        },
        "CPUAlarmHigh": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "300",
                "EvaluationPeriods": "2",
                "Threshold": "90",
                "AlarmActions": [{"Ref": "WebServerScaleUpPolicy"}],
                "Dimensions": [
                    {"Name": "AutoScalingGroupName", "Value": {"Ref": "WebServerAsg"}}
                ],
                "ComparisonOperator": "GreaterThanThreshold"
            }
        },
        "CPUAlarmLow": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "300",
                "EvaluationPeriods": "2",
                "Threshold": "70",
                "AlarmActions": [{"Ref": "WebServerScaleDownPolicy"}],
                "Dimensions": [
                    {"Name": "AutoScalingGroupName", "Value": {"Ref": "WebServerAsg"}}
                ],
                "ComparisonOperator": "LessThanThreshold"
            }
        },
        "WebElasticLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "Subnets": {"Ref": "WebElasticLoadBalancerSubnets"},
                "SecurityGroups": [{"Ref": "WebELBSecurityGroup"}],
                "CrossZone": "true",
                "Listeners": [
                    {
                        "LoadBalancerPort": "80",
                        "InstancePort": "80",
                        "Protocol": "HTTP",
                        "InstanceProtocol": "HTTP"
                    }
                ],
                "HealthCheck": {
                    "Target":  "HTTP:80/",
                    "HealthyThreshold": "3",
                    "UnhealthyThreshold": "5",
                    "Interval": "30",
                    "Timeout": "5"
                },
                "ConnectionDrainingPolicy": {
                    "Enabled": "true",
                    "Timeout": "60"
                },
                "Tags": [
                    {"Key": "Name", "Value": "DrupalWebserverElb"}
                ]
            }
        },
        "CleanupDrupalAMI":{
            "Type": "AWS::CloudFormation::Stack",
            "Properties":{
                "TemplateURL": {"Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/cleanupAMI.template"},
                "Parameters":{
                    "DrupalAMIImageId": {"Fn::GetAtt": ["CreateDrupalAMI", "Outputs.AMIId"]},
                    "AMIFunctionExecuteRole": {"Fn::GetAtt": ["CreateDrupalAMI", "Outputs.AMIFunctionRole"]}
                }
            }
        }
    },
    "Outputs":{
        "ELBURL": {
            "Description": "The URL of the ELB that you should use to create a CNAME/ALIAS DNS recrod to point to your Domain e.g. mysite.com",
            "Value":{"Fn::Join":["",[
                "http://",
                {"Fn::GetAtt":["WebElasticLoadBalancer","DNSName"]}
                ]]}
        }
    }
}